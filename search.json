[
  {
    "objectID": "plot2.html",
    "href": "plot2.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "For a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'}\n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "example_brdr.html",
    "href": "example_brdr.html",
    "title": "brdr demo",
    "section": "",
    "text": "For a demonstration of brdr.\n\n\nCode\nfrom brdr.aligner import Aligner\nfrom brdr.enums import OpenDomainStrategy\nfrom brdr.geometry_utils import geom_from_wkt\nfrom brdr.loader import DictLoader\n\n# CREATE AN ALIGNER\naligner = Aligner(\n    crs=\"EPSG:31370\",\n)\n# ADD A THEMATIC POLYGON TO THEMATIC DICTIONARY and LOAD into Aligner\nthematic_dict = {\"theme_id_1\": geom_from_wkt(\"POLYGON ((0 0, 0 9, 5 10, 10 0, 0 0))\")}\nloader = DictLoader(thematic_dict)\naligner.load_thematic_data(loader)\n# ADD A REFERENCE POLYGON TO REFERENCE DICTIONARY and LOAD into Aligner\nreference_dict = {\"ref_id_1\": geom_from_wkt(\"POLYGON ((0 1, 0 10,8 10,10 1,0 1))\")}\nloader = DictLoader(reference_dict)\naligner.load_reference_data(loader)\n# EXECUTE THE ALIGNMENT\nrelevant_distance = 1\nprocess_result = aligner.process(\n    relevant_distance=relevant_distance,\n    od_strategy=OpenDomainStrategy.SNAP_INNER_SIDE,\n    threshold_overlap_percentage=50,\n)\n# PRINT RESULTS IN WKT\nprint(\"result: \" + process_result[\"theme_id_1\"][relevant_distance][\"result\"].wkt)\nprint(\n    \"added area: \"\n    + process_result[\"theme_id_1\"][relevant_distance][\"result_diff_plus\"].wkt\n)\nprint(\n    \"removed area: \"\n    + process_result[\"theme_id_1\"][relevant_distance][\"result_diff_min\"].wkt\n)\n\n\nresult: POLYGON ((0.2928932188134523 0.2928932188134525, 0.1685303876974549 0.4444297669803975, 0.0761204674887134 0.6173165676349098, 0.0192147195967695 0.8049096779838716, 0 1, 0 10, 4.999999999999999 10, 9.500000000000004 1, 9.381966011250102 1, 9.36275129165333 0.8049096779838723, 9.305845543761384 0.6173165676348947, 9.213435623552671 0.4444297669804294, 9.089072792436635 0.2928932188134386, 8.937536244269706 0.1685303876974548, 8.76464944361519 0.0761204674887132, 8.577056333266233 0.0192147195967696, 8.3819660112501 -1.734723475976807e-18, 0.9999999999999997 -1.734723475976807e-18, 0.8049096779838718 0.0192147195967696, 0.6173165676349087 0.0761204674887139, 0.4444297669803966 0.1685303876974555, 0.2928932188134523 0.2928932188134525))\nadded area: POLYGON ((0 10, 4.99850865709512 10, 4.9985376179666465 9.99970752359333, 0 9, 0 10))\nremoved area: MULTIPOLYGON (((0.0761204674887134 0.6173165676349098, 0.1685303876974549 0.4444297669803975, 0.2928932188134523 0.2928932188134525, 0.4444297669803966 0.1685303876974556, 0.6173165676349087 0.0761204674887139, 0.8682521196030504 0, 1.734723475976807e-18 0, 1.734723475976807e-18 0.86825211960305, 0.0761204674887134 0.6173165676349098)), ((8.76464944361519 0.0761204674887132, 8.937536244269706 0.1685303876974548, 9.089072792436633 0.2928932188134385, 9.213435623552671 0.4444297669804296, 9.305845543761384 0.6173165676348947, 9.36275129165333 0.8049096779838723, 9.381966011250102 1, 9.5 1, 10 0, 8.513713891647056 0, 8.76464944361519 0.0761204674887132)))"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mijn Documentatie33",
    "section": "",
    "text": "Dit is een voorbeeld van Quarto op GitHub Pages."
  },
  {
    "objectID": "index.html#welkom",
    "href": "index.html#welkom",
    "title": "Mijn Documentatie33",
    "section": "",
    "text": "Dit is een voorbeeld van Quarto op GitHub Pages."
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "Voorbeeld: Python Code",
    "section": "",
    "text": "Hieronder zie je een Python-codeblok dat een lijst sorteert en afdrukt:\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndata = [5, 2, 9, 1, 7]\nsorted_data = sorted(data)\nprint(\"Gesorteerde data:\", sorted_data)\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\nfig, ax = plt.subplots(figsize=(6, 4))\nax.plot(x, y, marker='o')\nax.set_title(\"Voorbeeldplot\")\nax.set_xlabel(\"X-as\")\nax.set_ylabel(\"Y-as\")\nax.grid(True)\nplt.show()\n\n\nGesorteerde data: [1, 2, 5, 7, 9]\n\n\n\n\n\n\n\n\nFigure 1: A line"
  },
  {
    "objectID": "example.html#een-eenvoudig-python-voorbeeld",
    "href": "example.html#een-eenvoudig-python-voorbeeld",
    "title": "Voorbeeld: Python Code",
    "section": "",
    "text": "Hieronder zie je een Python-codeblok dat een lijst sorteert en afdrukt:\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndata = [5, 2, 9, 1, 7]\nsorted_data = sorted(data)\nprint(\"Gesorteerde data:\", sorted_data)\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\nfig, ax = plt.subplots(figsize=(6, 4))\nax.plot(x, y, marker='o')\nax.set_title(\"Voorbeeldplot\")\nax.set_xlabel(\"X-as\")\nax.set_ylabel(\"Y-as\")\nax.grid(True)\nplt.show()\n\n\nGesorteerde data: [1, 2, 5, 7, 9]\n\n\n\n\n\n\n\n\nFigure 1: A line"
  },
  {
    "objectID": "brdr-webservice.html",
    "href": "brdr-webservice.html",
    "title": "brdr-webservice",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "brdr-webservice.html#quarto",
    "href": "brdr-webservice.html#quarto",
    "title": "brdr-webservice",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "plot.html",
    "href": "plot.html",
    "title": "matplotlib demo1",
    "section": "",
    "text": "Hieronder zie je een lijnplot van een dataset:\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\nfig, ax = plt.subplots(figsize=(6, 4))\nax.plot(x, y, marker='o')\nax.set_title(\"Voorbeeldplot\")\nax.set_xlabel(\"X-as\")\nax.set_ylabel(\"Y-as\")\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line"
  },
  {
    "objectID": "plot.html#een-eenvoudige-plot-met-matplotlib",
    "href": "plot.html#een-eenvoudige-plot-met-matplotlib",
    "title": "matplotlib demo1",
    "section": "",
    "text": "Hieronder zie je een lijnplot van een dataset:\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = [1, 2, 3, 4, 5]\ny = [2, 4, 6, 8, 10]\n\nfig, ax = plt.subplots(figsize=(6, 4))\nax.plot(x, y, marker='o')\nax.set_title(\"Voorbeeldplot\")\nax.set_xlabel(\"X-as\")\nax.set_ylabel(\"Y-as\")\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line"
  }
]